{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\dummy\\\\src\\\\components\\\\Logovanje.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logovanje = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLoginFailed, setIsLoginFailed] = useState(false);\n  const [formData, setFormData] = useState({\n    \"Username\": \"\",\n    \"Lozinka\": \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Form data submitted:', formData);\n    fetch('https://localhost:44388/Korisnik/logovanje', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      console.log('Response from server:', data);\n      localStorage.setItem(\"token\", data); //pravljenje nove varijable u localStorage-u koja ce da cuva token i zvace se 'token'\n      console.log(localStorage.getItem(\"token\").JSON.stringify());\n      navigate('/ulogovan-korisnik');\n    }).catch(error => {\n      console.error(\"Error occurred:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Logovanje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        id: \"username\",\n        name: \"Username\",\n        value: formData.Username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lozinka\",\n        children: \"Lozinka:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"lozinka1\",\n        name: \"Lozinka\",\n        value: formData.Lozinka,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Uloguj se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), isLoginFailed && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Neuspesno logovanje. Proverite vase podatke i pokusajte ponovo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Logovanje, \"MmUZQW/eNcGqLdxYhrFigX87Uxk=\", false, function () {\n  return [useNavigate];\n});\n_c = Logovanje;\nexport default Logovanje;\nvar _c;\n$RefreshReg$(_c, \"Logovanje\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Logovanje","_s","navigate","isLoginFailed","setIsLoginFailed","formData","setFormData","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","mode","then","response","json","data","localStorage","setItem","getItem","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","Username","onChange","required","Lozinka","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/dummy/src/components/Logovanje.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Logovanje =()=>{\r\n    const navigate=useNavigate();\r\n\r\n    const [isLoginFailed, setIsLoginFailed]=useState(false);\r\n    \r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        \"Username\" : \"\",\r\n        \"Lozinka\" : \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value}=e.target;\r\n\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Form data submitted:', formData);\r\n        fetch('https://localhost:44388/Korisnik/logovanje', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n            },\r\n            mode:'cors',\r\n        })\r\n        .then((response)=>response.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            console.log('Response from server:', data);\r\n            localStorage.setItem(\"token\",data); //pravljenje nove varijable u localStorage-u koja ce da cuva token i zvace se 'token'\r\n            console.log(localStorage.getItem(\"token\").JSON.stringify());\r\n            navigate('/ulogovan-korisnik');\r\n        })\r\n        .catch((error)=> {\r\n              console.error(\"Error occurred:\",error);   \r\n        })\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Logovanje</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"text\">Username:</label>\r\n                <input\r\n                    type=\"username\"\r\n                    id=\"username\"\r\n                    name=\"Username\"\r\n                    value={formData.Username}\r\n                    onChange={handleChange}\r\n                    required\r\n                /><br/>\r\n\r\n                <label htmlFor=\"lozinka\">Lozinka:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"lozinka1\"\r\n                    name=\"Lozinka\"\r\n                    value={formData.Lozinka}\r\n                    onChange={handleChange}\r\n                    required\r\n                /><br/>\r\n\r\n                <button type=\"submit\">Uloguj se</button>\r\n            </form>\r\n            {isLoginFailed && <p>Neuspesno logovanje. Proverite vase podatke i pokusajte ponovo.</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logovanje;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}