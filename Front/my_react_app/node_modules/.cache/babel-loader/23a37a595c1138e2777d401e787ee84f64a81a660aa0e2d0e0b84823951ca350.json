{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\Web2-Front\\\\src\\\\components\\\\PregledArtikala.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DetaljiArtikla from \"./DetaljiArtikla\";\nimport chartSlika from \"../images/chart.png\";\nimport Korpa from \"./Korpa\";\nimport jwtDecode from \"jwt-decode\";\nimport { uk } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PregledArtikala = () => {\n  _s();\n  const [artikli, setArtikli] = useState([]);\n  const [selectedArtikal, setSelectedArtikal] = useState(null);\n  const [adresa, setAdresa] = useState(\"\");\n  const [komentar, setKomentar] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  // Globalna promenljiva za ID-jeve artikala\n  const [selectedArtikliIds, setSelectedArtikliIds] = useState([]);\n  const formatiranoTrenutnoVreme = () => {\n    const currentDate = new Date();\n    const formattedDate = currentDate.toLocaleDateString(\"en-GB\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    });\n    const formattedTime = currentDate.toLocaleTimeString(\"en-US\", {\n      hour12: false,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n    const stringovi = formattedDate.split(\"/\");\n    const datum = stringovi[2] + \"-\" + stringovi[1] + \"-\" + stringovi[0] + \"T\" + formattedTime + \".196Z\";\n    return datum;\n  };\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortOption, setSortOption] = useState(\"naziv\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [korpa, setKorpa] = useState(0);\n  const [ukupanIznos, setUkupanIznos] = useState(0);\n  const [showPregledPorudzbine, setShowPregledPorudzbine] = useState(false);\n  const odabraniArtikli = cartItems.filter(item => item.kolicina > 0);\n  const [prodavci, setProdavci] = useState(\"\");\n  const posaljiPorudzbinuNaServer = () => {\n    // Prvo kreiramo objekat koji sadrži sve potrebne informacije za porudžbinu\n\n    const newSelectedArtikliIds = cartItems.map(item => item.artikal.id);\n    setSelectedArtikliIds(newSelectedArtikliIds);\n    console.log(newSelectedArtikliIds);\n    console.log(artikli);\n    const zaSlanje = artikli.filter(artikal => newSelectedArtikliIds.includes(artikal.id));\n    console.log(JSON.stringify(zaSlanje));\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    console.log(decodedToken[\"Id\"]);\n    if (!token) {\n      console.error(\"Token nije prisutan u localStorage-u.\");\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko token nije prisutan.\n    }\n\n    // Pretpostavićemo da se JWT token sastoji iz tri dela (header, payload, signature) razdvojenih tačkom.\n    var tokenParts = token.split(\".\");\n    if (tokenParts.length !== 3) {\n      console.error(\"Neispravan format tokena.\");\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko format nije ispravan.\n    }\n\n    const nasumicnoVremeIsporuke = () => {\n      const trenutnoVreme = new Date();\n      const nasumicniBrojMinuta = Math.floor(Math.random() * 120) + 60; // Nasumičan broj između 60 i 179 (1 do 3 sata)\n      trenutnoVreme.setMinutes(trenutnoVreme.getMinutes() + nasumicniBrojMinuta);\n      console.log(trenutnoVreme);\n      return trenutnoVreme.toISOString();\n    };\n    const porudzbina = {\n      artikli: zaSlanje,\n      ukupanIznos: ukupanIznos,\n      adresaDostave: adresa,\n      komentar: komentar,\n      korisnikId: decodedToken[\"Id\"],\n      vremeIsporuke: nasumicnoVremeIsporuke(),\n      otkazana: false\n    };\n    console.log(porudzbina);\n\n    // Zatim koristimo fetch funkciju za slanje POST zahteva na server\n    fetch(\"https://localhost:44388/Porudzbina\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(porudzbina),\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      // uspesno poslato serveru\n      console.log(\"Sta saljem:\");\n      console.log(data);\n      alert(\"Porudžbina je uspešno poslata!\");\n      setCartItems([]); // Resetujemo korpu nakon što je porudžbina poslata\n      setUkupanIznos(0); // Resetujemo ukupan iznos nakon što je porudžbina poslata\n      setAdresa(\"\"); // Resetujemo polje za adresu nakon što je porudžbina poslata\n      setKomentar(\"\"); // Resetujemo polje za komentar nakon što je porudžbina poslata\n    }).catch(error => {\n      //greska prilikom slanja na server\n      console.error(\"Greška prilikom slanja porudžbine:\", error);\n      alert(\"Došlo je do greške prilikom slanja porudžbine.\");\n    });\n\n    //nakon sto sam poslala porudzbinu da smanjim broj artikala\n    fetch(\"https://localhost:44388/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: `Bearer ${token}`,\n      },\n\n      body: JSON.stringify(zaSlanje),\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      // uspesno poslato serveru\n      console.log(\"Artikli koje saljem za smanjenje kolicine:\");\n      console.log(data);\n      alert(\"Uspesno je smanjena kolicina artikala.\");\n    }).catch(error => {\n      //greska prilikom slanja na server\n      console.error(\"Greška prilikom smanjenja kolicine:\", error);\n    });\n  };\n\n  //funkcija koja dobavlja cenu postarine konkretnog prodavca\n  function postarinaProdavca(cartItems) {\n    //provera ako ima dva artikla od istog Pordavca\n    const postarinaMap = new Map();\n    cartItems.forEach(item => {\n      const idProdavca = item.artikal[\"prodavacID\"];\n      const kolicina = item.kolicina;\n      const postarina = postarinaMap.get(idProdavca) || 0;\n      console.log(\"Id prodavca: \" + idProdavca + \"kolicina: \" + kolicina + \"Postarina: \" + postarina);\n      const trazeniProdavac = prodavci.find(prodavac => prodavac.id === idProdavca);\n      const postarinaTrazenogProdavca = trazeniProdavac.postarina;\n      postarinaMap.set(idProdavca, postarina + kolicina * postarinaTrazenogProdavca);\n    });\n    let ukupnaPostarina = 0;\n\n    // Saberi sve postarine\n    postarinaMap.forEach(postarina => {\n      ukupnaPostarina += postarina;\n    });\n    return ukupnaPostarina;\n  }\n  useEffect(() => {\n    var token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    console.log(decodedToken[\"Id\"]);\n    fetch(\"https://localhost:44388/Artikal\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      mode: \"cors\"\n    }).then(responce => responce.json()).then(data => {\n      //obrada odgovora servera\n      console.log(data); //ovde dobijem prodavac Id\n      setArtikli(data);\n    }).catch(error => {\n      //obrada greske\n      console.error(\"Greška prilikom dobavljanja podataka sa servera:\", error);\n    });\n\n    //fetch sa dobavljanje svih prodavaca(da bi preko idProdavca dobili postarinu)\n    fetch(\"https://localhost:44388/Prodavac/allProdavci\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: `Bearer ${token}`,\n      },\n\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      console.log(\"(GET) Svi prodavci:\");\n      console.log(data);\n      setProdavci(data);\n    }).catch(error => {\n      console.error(\"Greška prilikom dobavljanja prodavaca:\", error);\n      alert(\"Došlo je do greške prilikom dobavljanja prodavaca.\");\n    });\n  }, []); //prazan dependency niz što znači da će se izvršiti samo prilikom prvog renderovanja komponente.\n\n  useEffect(() => {\n    if (cartItems.length === 0) {\n      setShowPregledPorudzbine(false);\n    }\n  }, [cartItems]);\n  const filteredArtikli = artikli.filter(artikal => {\n    return artikal.naziv.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  const dodajUKorpu = artikal => {\n    const existingItem = cartItems.find(item => item.artikal.id === artikal.id);\n    //console.log(\"*******\" + artikal.id + \"**************\");\n    if (existingItem) {\n      if (existingItem.kolicina >= artikal.kolicina) {\n        alert(\"Dostignuta je maksimalna količina za ovaj artikal.\");\n        return;\n      }\n      setCartItems(cartItems.map(item => item.artikal.id === artikal.id ? {\n        ...item,\n        kolicina: item.kolicina + 1\n      } : item));\n    } else {\n      setCartItems([...cartItems, {\n        artikal,\n        kolicina: 1,\n        cena: 0\n      }]);\n    }\n    setUkupanIznos(ukupanIznos + artikal.cena);\n  };\n  const obrisiIzKorpe = artikal => {\n    const existingItem = cartItems.find(item => item.artikal.id === artikal.id);\n    if (existingItem) {\n      if (existingItem.kolicina === 1) {\n        setCartItems(cartItems.filter(item => item.artikal.id !== artikal.id));\n      } else {\n        setCartItems(cartItems.map(item => item.artikal.id === artikal.id ? {\n          ...item,\n          kolicina: item.kolicina - 1\n        } : item));\n      }\n      setUkupanIznos(ukupanIznos - artikal.cena);\n    }\n  };\n  const handlePoruci = () => {\n    // Ovde možete implementirati logiku za slanje porudžbine na server, resetovanje korpe, ili nešto drugo što želite\n    alert(\"Porudžbina je uspešno poslata!\");\n    setCartItems([]);\n    setUkupanIznos(0);\n  };\n  const sortedArtikli = [...filteredArtikli]; // Kreiramo kopiju niza kako bismo sačuvali originalni niz nepromenjen\n  console.log(sortedArtikli);\n  if (sortOption === \"naziv\") {\n    // Sortiranje po nazivu (abecedno)\n    sortedArtikli.sort((a, b) => a.naziv.localeCompare(b.naziv));\n  } else if (sortOption === \"cena\") {\n    // Sortiranje po ceni\n    sortedArtikli.sort((a, b) => {\n      if (sortOrder === \"asc\") {\n        return a.cena - b.cena; // Sortiranje od najjeftinijeg do najskupljeg\n      } else {\n        return b.cena - a.cena; // Sortiranje od najskupljeg do najjeftinijeg\n      }\n    });\n  }\n\n  function ukupnaPostarina(cartItems) {\n    //provera ako ima dva artikla od istog Pordavca\n    const listaIdjevaProdavaca = [];\n    cartItems.forEach(item => {\n      const idProdavca = item.artikal[\"prodavacID\"];\n      if (!listaIdjevaProdavaca.includes(idProdavca)) {\n        listaIdjevaProdavaca.push(idProdavca);\n      }\n    });\n    let ukupnaPostarina = 0;\n    const filtriraniProdavci = prodavci.filter(prodavac => listaIdjevaProdavaca.includes(prodavac.id));\n    filtriraniProdavci.forEach(prodavac => {\n      ukupnaPostarina += prodavac.postarina;\n    });\n    return ukupnaPostarina;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: chartSlika,\n        alt: \"Korpa\",\n        style: {\n          width: \"40px\",\n          height: \"40px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: korpa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#279980\"\n      },\n      children: \"Dostupni artikli\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Unesite naziv artikla za pretragu\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sortOption,\n      onChange: e => setSortOption(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"naziv\",\n        children: \"Sortiraj po nazivu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cena\",\n        children: \"Sortiraj po ceni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\"),\n      children: sortOrder === \"asc\" ? \"Sortiraj po ceni (rastuce)\" : \"Sortiraj po ceni (opadajuce)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              color: \"#279980\"\n            },\n            children: \"Naziv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              color: \"#279980\"\n            },\n            children: \"Slika\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              color: \"#279980\"\n            },\n            children: \"Koli\\u010Dina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              color: \"#279980\"\n            },\n            children: \"Cena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedArtikli.map(artikal => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: artikal.naziv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: artikal.slika,\n              alt: artikal.naziv,\n              style: {\n                width: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: artikal.kolicina > 0 ? \"green\" : \"red\"\n            },\n            children: artikal.kolicina > 0 ? \"Na stanju\" : \"Nema na stanju\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artikal.cena.toLocaleString(\"sr-RS\", {\n              style: \"currency\",\n              currency: \"RSD\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setSelectedArtikal(artikal);\n              },\n              children: \"Detalji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => dodajUKorpu(artikal),\n              children: \"Dodaj u korpu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, artikal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), selectedArtikal && /*#__PURE__*/_jsxDEV(DetaljiArtikla, {\n      artikal: selectedArtikal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Korpa, {\n      cartItems: cartItems,\n      obrisiIzKorpe: obrisiIzKorpe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#279980\"\n          },\n          children: \"Iznos bez troskova dostave:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: ukupanIznos.toLocaleString(\"sr-RS\", {\n            style: \"currency\",\n            currency: \"RSD\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPregledPorudzbine(true),\n          children: \"Pregled porudzbine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), showPregledPorudzbine && cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Artikli u korpi:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.artikal.naziv, \" (Koli\\u010Dina: \", item.kolicina, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"adresa\",\n            children: \"Adresa:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"adresa\",\n            value: adresa,\n            onChange: e => setAdresa(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"komentar\",\n            children: \"Komentar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"komentar\",\n            value: komentar,\n            onChange: e => setKomentar(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"#279980\"\n            },\n            children: \"Ukupan iznos(sa postarinom):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (ukupanIznos + ukupnaPostarina(cartItems)).toLocaleString(\"sr-RS\", {\n              style: \"currency\",\n              currency: \"RSD\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: posaljiPorudzbinuNaServer,\n          children: \"Poru\\u010Di\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_s(PregledArtikala, \"b/SpZRfq3gUTScFcgTezwlBc/oU=\");\n_c = PregledArtikala;\nexport default PregledArtikala;\nvar _c;\n$RefreshReg$(_c, \"PregledArtikala\");","map":{"version":3,"names":["React","useEffect","useState","DetaljiArtikla","chartSlika","Korpa","jwtDecode","uk","jsxDEV","_jsxDEV","PregledArtikala","_s","artikli","setArtikli","selectedArtikal","setSelectedArtikal","adresa","setAdresa","komentar","setKomentar","cartItems","setCartItems","selectedArtikliIds","setSelectedArtikliIds","formatiranoTrenutnoVreme","currentDate","Date","formattedDate","toLocaleDateString","year","month","day","formattedTime","toLocaleTimeString","hour12","hour","minute","second","stringovi","split","datum","searchTerm","setSearchTerm","sortOption","setSortOption","sortOrder","setSortOrder","korpa","setKorpa","ukupanIznos","setUkupanIznos","showPregledPorudzbine","setShowPregledPorudzbine","odabraniArtikli","filter","item","kolicina","prodavci","setProdavci","posaljiPorudzbinuNaServer","newSelectedArtikliIds","map","artikal","id","console","log","zaSlanje","includes","JSON","stringify","token","localStorage","getItem","decodedToken","error","tokenParts","length","nasumicnoVremeIsporuke","trenutnoVreme","nasumicniBrojMinuta","Math","floor","random","setMinutes","getMinutes","toISOString","porudzbina","adresaDostave","korisnikId","vremeIsporuke","otkazana","fetch","method","headers","Authorization","body","mode","then","response","json","data","alert","catch","postarinaProdavca","postarinaMap","Map","forEach","idProdavca","postarina","get","trazeniProdavac","find","prodavac","postarinaTrazenogProdavca","set","ukupnaPostarina","responce","filteredArtikli","naziv","toLowerCase","dodajUKorpu","existingItem","cena","obrisiIzKorpe","handlePoruci","sortedArtikli","sort","a","b","localeCompare","listaIdjevaProdavaca","push","filtriraniProdavci","children","style","position","top","right","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","color","type","placeholder","value","onChange","e","target","onClick","slika","toLocaleString","currency","marginTop","index","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/Web2-Front/src/components/PregledArtikala.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DetaljiArtikla from \"./DetaljiArtikla\";\r\nimport chartSlika from \"../images/chart.png\";\r\nimport Korpa from \"./Korpa\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { uk } from \"date-fns/locale\";\r\n\r\nconst PregledArtikala = () => {\r\n  const [artikli, setArtikli] = useState([]);\r\n  const [selectedArtikal, setSelectedArtikal] = useState(null);\r\n\r\n  const [adresa, setAdresa] = useState(\"\");\r\n  const [komentar, setKomentar] = useState(\"\");\r\n  const [cartItems, setCartItems] = useState([]);\r\n  // Globalna promenljiva za ID-jeve artikala\r\n  const [selectedArtikliIds, setSelectedArtikliIds] = useState([]);\r\n\r\n  const formatiranoTrenutnoVreme = () => {\r\n    const currentDate = new Date();\r\n    const formattedDate = currentDate.toLocaleDateString(\"en-GB\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n\r\n    const formattedTime = currentDate.toLocaleTimeString(\"en-US\", {\r\n      hour12: false,\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n\r\n    const stringovi = formattedDate.split(\"/\");\r\n    const datum =\r\n      stringovi[2] +\r\n      \"-\" +\r\n      stringovi[1] +\r\n      \"-\" +\r\n      stringovi[0] +\r\n      \"T\" +\r\n      formattedTime +\r\n      \".196Z\";\r\n    return datum;\r\n  };\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"naziv\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [korpa, setKorpa] = useState(0);\r\n  const [ukupanIznos, setUkupanIznos] = useState(0);\r\n  const [showPregledPorudzbine, setShowPregledPorudzbine] = useState(false);\r\n  const odabraniArtikli = cartItems.filter((item) => item.kolicina > 0);\r\n  const [prodavci, setProdavci] = useState(\"\");\r\n\r\n  const posaljiPorudzbinuNaServer = () => {\r\n    // Prvo kreiramo objekat koji sadrži sve potrebne informacije za porudžbinu\r\n\r\n    const newSelectedArtikliIds = cartItems.map((item) => item.artikal.id);\r\n    setSelectedArtikliIds(newSelectedArtikliIds);\r\n\r\n    console.log(newSelectedArtikliIds);\r\n    console.log(artikli);\r\n\r\n    const zaSlanje = artikli.filter((artikal) =>\r\n      newSelectedArtikliIds.includes(artikal.id)\r\n    );\r\n\r\n    console.log(JSON.stringify(zaSlanje));\r\n\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    console.log(decodedToken[\"Id\"]);\r\n    if (!token) {\r\n      console.error(\"Token nije prisutan u localStorage-u.\");\r\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko token nije prisutan.\r\n    }\r\n\r\n    // Pretpostavićemo da se JWT token sastoji iz tri dela (header, payload, signature) razdvojenih tačkom.\r\n    var tokenParts = token.split(\".\");\r\n    if (tokenParts.length !== 3) {\r\n      console.error(\"Neispravan format tokena.\");\r\n\r\n      return; // Ovde možete izvršiti odgovarajuće akcije ukoliko format nije ispravan.\r\n    }\r\n\r\n    const nasumicnoVremeIsporuke = () => {\r\n      const trenutnoVreme = new Date();\r\n      const nasumicniBrojMinuta = Math.floor(Math.random() * 120) + 60; // Nasumičan broj između 60 i 179 (1 do 3 sata)\r\n      trenutnoVreme.setMinutes(\r\n        trenutnoVreme.getMinutes() + nasumicniBrojMinuta\r\n      );\r\n      console.log(trenutnoVreme);\r\n      return trenutnoVreme.toISOString();\r\n    };\r\n\r\n    const porudzbina = {\r\n      artikli: zaSlanje,\r\n      ukupanIznos: ukupanIznos,\r\n      adresaDostave: adresa,\r\n      komentar: komentar,\r\n      korisnikId: decodedToken[\"Id\"],\r\n      vremeIsporuke: nasumicnoVremeIsporuke(),\r\n      otkazana: false,\r\n    };\r\n\r\n    console.log(porudzbina);\r\n\r\n    // Zatim koristimo fetch funkciju za slanje POST zahteva na server\r\n    fetch(\"https://localhost:44388/Porudzbina\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(porudzbina),\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // uspesno poslato serveru\r\n        console.log(\"Sta saljem:\");\r\n        console.log(data);\r\n        alert(\"Porudžbina je uspešno poslata!\");\r\n\r\n        setCartItems([]); // Resetujemo korpu nakon što je porudžbina poslata\r\n        setUkupanIznos(0); // Resetujemo ukupan iznos nakon što je porudžbina poslata\r\n        setAdresa(\"\"); // Resetujemo polje za adresu nakon što je porudžbina poslata\r\n        setKomentar(\"\"); // Resetujemo polje za komentar nakon što je porudžbina poslata\r\n      })\r\n      .catch((error) => {\r\n        //greska prilikom slanja na server\r\n        console.error(\"Greška prilikom slanja porudžbine:\", error);\r\n        alert(\"Došlo je do greške prilikom slanja porudžbine.\");\r\n      });\r\n\r\n    //nakon sto sam poslala porudzbinu da smanjim broj artikala\r\n    fetch(\"https://localhost:44388/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        //Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(zaSlanje),\r\n      mode: \"cors\",\r\n    })\r\n    .then((response) => response.json())\r\n      .then((data) => {\r\n        // uspesno poslato serveru\r\n        console.log(\"Artikli koje saljem za smanjenje kolicine:\");\r\n        console.log(data);\r\n        alert(\"Uspesno je smanjena kolicina artikala.\");\r\n      })\r\n      .catch((error) => {\r\n        //greska prilikom slanja na server\r\n        console.error(\"Greška prilikom smanjenja kolicine:\", error);\r\n        \r\n      });\r\n  };\r\n\r\n  //funkcija koja dobavlja cenu postarine konkretnog prodavca\r\n  function postarinaProdavca(cartItems) {\r\n    //provera ako ima dva artikla od istog Pordavca\r\n    const postarinaMap = new Map();\r\n\r\n    cartItems.forEach((item) => {\r\n      const idProdavca = item.artikal[\"prodavacID\"];\r\n      const kolicina = item.kolicina;\r\n      const postarina = postarinaMap.get(idProdavca) || 0;\r\n\r\n      console.log(\r\n        \"Id prodavca: \" +\r\n          idProdavca +\r\n          \"kolicina: \" +\r\n          kolicina +\r\n          \"Postarina: \" +\r\n          postarina\r\n      );\r\n\r\n      const trazeniProdavac = prodavci.find(\r\n        (prodavac) => prodavac.id === idProdavca\r\n      );\r\n\r\n      const postarinaTrazenogProdavca = trazeniProdavac.postarina;\r\n      postarinaMap.set(\r\n        idProdavca,\r\n        postarina + kolicina * postarinaTrazenogProdavca\r\n      );\r\n    });\r\n\r\n    let ukupnaPostarina = 0;\r\n\r\n    // Saberi sve postarine\r\n    postarinaMap.forEach((postarina) => {\r\n      ukupnaPostarina += postarina;\r\n    });\r\n\r\n    return ukupnaPostarina;\r\n  }\r\n\r\n  useEffect(() => {\r\n    var token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    console.log(decodedToken[\"Id\"]);\r\n\r\n    fetch(\"https://localhost:44388/Artikal\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      mode: \"cors\",\r\n    })\r\n      .then((responce) => responce.json())\r\n      .then((data) => {\r\n        //obrada odgovora servera\r\n        console.log(data); //ovde dobijem prodavac Id\r\n        setArtikli(data);\r\n      })\r\n      .catch((error) => {\r\n        //obrada greske\r\n        console.error(\r\n          \"Greška prilikom dobavljanja podataka sa servera:\",\r\n          error\r\n        );\r\n      });\r\n\r\n    //fetch sa dobavljanje svih prodavaca(da bi preko idProdavca dobili postarinu)\r\n    fetch(\"https://localhost:44388/Prodavac/allProdavci\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        //Authorization: `Bearer ${token}`,\r\n      },\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"(GET) Svi prodavci:\");\r\n        console.log(data);\r\n        setProdavci(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Greška prilikom dobavljanja prodavaca:\", error);\r\n        alert(\"Došlo je do greške prilikom dobavljanja prodavaca.\");\r\n      });\r\n  }, []); //prazan dependency niz što znači da će se izvršiti samo prilikom prvog renderovanja komponente.\r\n\r\n  useEffect(() => {\r\n    if (cartItems.length === 0) {\r\n      setShowPregledPorudzbine(false);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  const filteredArtikli = artikli.filter((artikal) => {\r\n    return artikal.naziv.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  const dodajUKorpu = (artikal) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.artikal.id === artikal.id\r\n    );\r\n    //console.log(\"*******\" + artikal.id + \"**************\");\r\n    if (existingItem) {\r\n      if (existingItem.kolicina >= artikal.kolicina) {\r\n        alert(\"Dostignuta je maksimalna količina za ovaj artikal.\");\r\n        return;\r\n      }\r\n\r\n      setCartItems(\r\n        cartItems.map((item) =>\r\n          item.artikal.id === artikal.id\r\n            ? { ...item, kolicina: item.kolicina + 1 }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setCartItems([...cartItems, { artikal, kolicina: 1, cena: 0 }]);\r\n    }\r\n\r\n    setUkupanIznos(ukupanIznos + artikal.cena);\r\n  };\r\n\r\n  const obrisiIzKorpe = (artikal) => {\r\n    const existingItem = cartItems.find(\r\n      (item) => item.artikal.id === artikal.id\r\n    );\r\n    if (existingItem) {\r\n      if (existingItem.kolicina === 1) {\r\n        setCartItems(\r\n          cartItems.filter((item) => item.artikal.id !== artikal.id)\r\n        );\r\n      } else {\r\n        setCartItems(\r\n          cartItems.map((item) =>\r\n            item.artikal.id === artikal.id\r\n              ? { ...item, kolicina: item.kolicina - 1 }\r\n              : item\r\n          )\r\n        );\r\n      }\r\n\r\n      setUkupanIznos(ukupanIznos - artikal.cena);\r\n    }\r\n  };\r\n\r\n  const handlePoruci = () => {\r\n    // Ovde možete implementirati logiku za slanje porudžbine na server, resetovanje korpe, ili nešto drugo što želite\r\n    alert(\"Porudžbina je uspešno poslata!\");\r\n    setCartItems([]);\r\n    setUkupanIznos(0);\r\n  };\r\n\r\n  const sortedArtikli = [...filteredArtikli]; // Kreiramo kopiju niza kako bismo sačuvali originalni niz nepromenjen\r\n  console.log(sortedArtikli);\r\n\r\n  if (sortOption === \"naziv\") {\r\n    // Sortiranje po nazivu (abecedno)\r\n    sortedArtikli.sort((a, b) => a.naziv.localeCompare(b.naziv));\r\n  } else if (sortOption === \"cena\") {\r\n    // Sortiranje po ceni\r\n    sortedArtikli.sort((a, b) => {\r\n      if (sortOrder === \"asc\") {\r\n        return a.cena - b.cena; // Sortiranje od najjeftinijeg do najskupljeg\r\n      } else {\r\n        return b.cena - a.cena; // Sortiranje od najskupljeg do najjeftinijeg\r\n      }\r\n    });\r\n  }\r\n\r\n  function ukupnaPostarina(cartItems) {\r\n    //provera ako ima dva artikla od istog Pordavca\r\n    const listaIdjevaProdavaca = [];\r\n\r\n    cartItems.forEach((item) => {\r\n      const idProdavca = item.artikal[\"prodavacID\"];\r\n\r\n      if (!listaIdjevaProdavaca.includes(idProdavca)) {\r\n        listaIdjevaProdavaca.push(idProdavca);\r\n      }\r\n    });\r\n\r\n    let ukupnaPostarina = 0;\r\n\r\n    const filtriraniProdavci = prodavci.filter((prodavac) =>\r\n      listaIdjevaProdavaca.includes(prodavac.id)\r\n    );\r\n\r\n    filtriraniProdavci.forEach((prodavac) => {\r\n      ukupnaPostarina += prodavac.postarina;\r\n    });\r\n\r\n    return ukupnaPostarina;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"absolute\", top: \"20px\", right: \"20px\" }}>\r\n        <img\r\n          src={chartSlika}\r\n          alt=\"Korpa\"\r\n          style={{ width: \"40px\", height: \"40px\" }}\r\n        />\r\n        <span>{korpa}</span>\r\n      </div>\r\n\r\n      <h1 style={{ color: \"#279980\" }}>Dostupni artikli</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Unesite naziv artikla za pretragu\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <select\r\n        value={sortOption}\r\n        onChange={(e) => setSortOption(e.target.value)}\r\n      >\r\n        <option value=\"naziv\">Sortiraj po nazivu</option>\r\n        <option value=\"cena\">Sortiraj po ceni</option>\r\n      </select>\r\n      <button\r\n        onClick={() => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\")}\r\n      >\r\n        {sortOrder === \"asc\"\r\n          ? \"Sortiraj po ceni (rastuce)\"\r\n          : \"Sortiraj po ceni (opadajuce)\"}\r\n      </button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ color: \"#279980\" }}>Naziv</th>\r\n            <th style={{ color: \"#279980\" }}>Slika</th>\r\n            <th style={{ color: \"#279980\" }}>Količina</th>\r\n            <th style={{ color: \"#279980\" }}>Cena</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedArtikli.map((artikal) => (\r\n            <tr key={artikal.id}>\r\n              <td>{artikal.naziv}</td>\r\n              <td>\r\n                <img\r\n                  src={artikal.slika}\r\n                  alt={artikal.naziv}\r\n                  style={{ width: \"100px\" }}\r\n                />\r\n              </td>\r\n              <td style={{ color: artikal.kolicina > 0 ? \"green\" : \"red\" }}>\r\n                {artikal.kolicina > 0 ? \"Na stanju\" : \"Nema na stanju\"}\r\n              </td>\r\n              <td>\r\n                {artikal.cena.toLocaleString(\"sr-RS\", {\r\n                  style: \"currency\",\r\n                  currency: \"RSD\",\r\n                })}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setSelectedArtikal(artikal);\r\n                  }}\r\n                >\r\n                  Detalji\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" onClick={() => dodajUKorpu(artikal)}>\r\n                  Dodaj u korpu\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedArtikal && <DetaljiArtikla artikal={selectedArtikal} />}\r\n      <Korpa cartItems={cartItems} obrisiIzKorpe={obrisiIzKorpe} />\r\n\r\n      <div>\r\n        {/* ...ostatak JSX koda... */}\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h2 style={{ color: \"#279980\" }}>Iznos bez troskova dostave:</h2>{\" \"}\r\n          <h2>\r\n            {ukupanIznos.toLocaleString(\"sr-RS\", {\r\n              style: \"currency\",\r\n              currency: \"RSD\",\r\n            })}\r\n          </h2>\r\n          {cartItems.length > 0 && (\r\n            <button onClick={() => setShowPregledPorudzbine(true)}>\r\n              Pregled porudzbine\r\n            </button>\r\n          )}\r\n        </div>\r\n        {showPregledPorudzbine && cartItems.length > 0 && (\r\n          <div>\r\n            <h2>Artikli u korpi:</h2>\r\n            <ul>\r\n              {cartItems.map((item, index) => (\r\n                <li key={index}>\r\n                  {item.artikal.naziv} (Količina: {item.kolicina})\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div>\r\n              <label htmlFor=\"adresa\">Adresa:</label>\r\n              <input\r\n                id=\"adresa\"\r\n                value={adresa}\r\n                onChange={(e) => setAdresa(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"komentar\">Komentar:</label>\r\n              <textarea\r\n                id=\"komentar\"\r\n                value={komentar}\r\n                onChange={(e) => setKomentar(e.target.value)}\r\n              />\r\n              <br />\r\n              <h2 style={{ color: \"#279980\" }}>Ukupan iznos(sa postarinom):</h2>\r\n              <h2>\r\n                {(ukupanIznos + ukupnaPostarina(cartItems)).toLocaleString(\r\n                  \"sr-RS\",\r\n                  {\r\n                    style: \"currency\",\r\n                    currency: \"RSD\",\r\n                  }\r\n                )}\r\n              </h2>\r\n            </div>\r\n            <button onClick={posaljiPorudzbinuNaServer}>Poruči</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PregledArtikala;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}