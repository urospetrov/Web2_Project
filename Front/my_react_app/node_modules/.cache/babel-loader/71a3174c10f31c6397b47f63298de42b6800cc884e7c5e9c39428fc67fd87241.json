{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irenv\\\\Desktop\\\\dummy\\\\src\\\\helpers\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  allowedRoles,\n  ...rest\n}) => {\n  const getUserRole = () => {\n    var token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        return decodedToken[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n      } catch (error) {\n        console.error(\"Error decoding token:\", error);\n      }\n    }\n    return null;\n  };\n  const userRole = getUserRole();\n  if (allowedRoles.includes(userRole)) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else {\n    /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","element","Component","allowedRoles","rest","getUserRole","token","localStorage","getItem","decodedToken","error","console","userRole","includes","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/irenv/Desktop/dummy/src/helpers/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst ProtectedRoute = ({ element: Component, allowedRoles, ...rest }) => {\r\n  const getUserRole = () => {\r\n    var token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        return decodedToken[\r\n          \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\r\n        ];\r\n      } catch (error) {\r\n        console.error(\"Error decoding token:\", error);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const userRole = getUserRole();\r\n  if (allowedRoles.includes(userRole)) {\r\n    return <Route {...rest} element={<Component />} />;\r\n  } else {\r\n    <Navigate to=\"/\" />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAEC,YAAY;EAAE,GAAGC;AAAK,CAAC,KAAK;EACxE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,YAAY,GAAGZ,SAAS,CAACS,KAAK,CAAC;QACrC,OAAOG,YAAY,CACjB,8DAA8D,CAC/D;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,IAAIF,YAAY,CAACU,QAAQ,CAACD,QAAQ,CAAC,EAAE;IACnC,oBAAOb,OAAA,CAACJ,KAAK;MAAA,GAAKS,IAAI;MAAEH,OAAO,eAAEF,OAAA,CAACG,SAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD,CAAC,MAAM;IACL,aAAAlB,OAAA,CAACH,QAAQ;MAACsB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;AACF,CAAC;AAACE,EAAA,GAtBInB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}